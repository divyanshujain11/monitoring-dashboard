name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # -----------------------------
    # 1. Checkout code
    # -----------------------------
    - name: Checkout code
      uses: actions/checkout@v3

    # -----------------------------
    # 2. Set up Node.js
    # -----------------------------
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    # -----------------------------
    # 3. Lint Backend
    # -----------------------------
    - name: Lint backend
      working-directory: ./backend
      run: npm install && npx eslint .

    # -----------------------------
    # 4. Lint Frontend
    # -----------------------------
    - name: Lint frontend
      working-directory: ./frontend
      run: npm install && npx eslint .

    # -----------------------------
    # 5. Run Backend Tests
    # -----------------------------
    - name: Run backend tests
      working-directory: ./backend
      run: npm test

    # -----------------------------
    # 6. Run Frontend Tests
    # -----------------------------
    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test

    # -----------------------------
    # 7. Build & Push Docker Images
    # -----------------------------
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push backend image
      working-directory: ./backend
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/monitoring-backend:latest .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/monitoring-backend:latest

    - name: Build and push frontend image
      working-directory: ./frontend
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/monitoring-frontend:latest .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/monitoring-frontend:latest

    # -----------------------------
    # 8. Deploy to Kubernetes
    # -----------------------------
    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f ./Deployment/backend.yaml
        kubectl apply -f ./Deployment/frontend.yaml
