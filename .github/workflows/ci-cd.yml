name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set image tag
        run: |
          echo "IMAGE_TAG=build-${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # ---------------- Lint Backend ----------------
      - name: Lint Backend
        working-directory: ./backend
        run: |
          npm install
          npx eslint . || true   # || true ensures pipeline continues even if lint warnings exist

      # ---------------- Lint Frontend ----------------
      - name: Lint Frontend
        working-directory: ./frontend
        run: |
          npm install
          npx eslint . || true

      # ---------------- Build & Push Docker Images ----------------
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Backend Image
        working-directory: ./backend
        run: |
          docker build -t divaysnhujain/monitoring-backend:${{ env.IMAGE_TAG }} .
          docker push divaysnhujain/monitoring-backend:${{ env.IMAGE_TAG }}

      - name: Build & Push Frontend Image
        working-directory: ./frontend
        run: |
          docker build -t divaysnhujain/monitoring-frontend:${{ env.IMAGE_TAG }} .
          docker push divaysnhujain/monitoring-frontend:${{ env.IMAGE_TAG }}

      # ---------------- Deploy to Kubernetes ----------------
      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" > $HOME/.kube/config

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f Deployment/